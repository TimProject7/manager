<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.parker.admin.dao.ProductDao">

	<select id="listProduct" resultType="com.parker.admin.vo.ProductVO"
		parameterType="com.parker.admin.vo.ProductVO">
		select *
		from(
		select list.*, rownum as rnum
		from (
		SELECT
		product_number,product_name,product_content,product_company,product_origin,product_image,product_price,to_char(product_regdate,'YYYY-mm-DD')
		product_regdate,product_status
		FROM products_tb
		<if test="search=='product_name'">
			where (product_name Like '%'||#{keyword}||'%')
		</if>
		ORDER BY
		product_number)list
		)
		where
		rnum between #{start_row} and
		#{end_row}
	</select>

	<select id="listProductCnt" resultType="int"
		parameterType="com.parker.admin.vo.ProductVO">
		select
		nvl(count(1),0)
		from
		(select
		list.*
		from(
		SELECT
		product_number,product_name,product_content,product_company,product_origin,product_image,product_price,to_char(product_regdate,'YYYY-mm-DD')
		product_regdate,product_status
		FROM products_tb

		)list
		)
	</select>

	<!-- <select id="detailProduct" resultType="com.parker.admin.vo.ProductVO"> 
		SELECT product_number,product_name,product_content,product_company,product_origin,product_image,product_price,to_char(product_regdate,'YYYY-mm-DD') 
		product_regdate FROM products_tb where product_number=#{product_number} </select> -->

	<select id="detailProduct" resultType="com.parker.admin.vo.ProductVO">
		SELECT
		product_number,product_name,product_content,product_company,product_origin,product_image,product_price,to_char(product_regdate,'YYYY-mm-DD')
		product_regdate,product_status
		FROM products_tb
		where product_number =
		#{product_number}

	</select>
	<insert id="insertProduct">
		insert into products_tb(
		PRODUCT_NUMBER,
		PRODUCT_NAME,
		PRODUCT_CONTENT,
		PRODUCT_COMPANY,
		PRODUCT_ORIGIN,
		PRODUCT_IMAGE,
		ADMIN_NUMBER,
		PRODUCT_PRICE,
		PRODUCT_REGDATE)
		values(seq_product_tb.nextval,#{product_name},#{product_content},#{product_company},#{product_origin},#{product_image},#{admin_number},#{product_price},sysdate)
	</insert>
	<update id="salesProduct">

		UPDATE products_tb SET
		product_status = 'Y'
		where
		product_number=#{product_number}
	</update>
	<update id="salesStopProduct">

		UPDATE products_tb SET
		product_status = 'N'
		where
		product_number=#{product_number}
	</update>
	<update id="updateProduct">
		UPDATE products_tb SET
		product_name = #{product_name},
		product_content = #{product_content},
		product_company =
		#{product_company},
		product_origin = #{product_origin},
		product_image =
		#{product_image},
		product_price = #{product_price}
		where
		product_number=#{product_number}
	</update>

	<select id="productNameChk" parameterType="com.parker.admin.vo.ProductVO"
		resultType="int">
		select count(product_name)
		from
		products_tb
		where
		product_name=#{product_name}
	</select>

	<select id="editProduct" resultType="com.parker.admin.vo.ProductVO">
		select * from products_tb
		where product_number = #{product_number}
	</select>

	<select id="listProductQna" resultType="com.parker.admin.vo.ProductQnaVO">
		select * from
		productqna_tb
		where product_number =
		#{product_number}
	</select>

	<select id="qnaDetailProduct" resultType="com.parker.admin.vo.ProductQnaVO">
		select
		u.user_id,u.user_number,q.*
		from
		productqna_tb q,
		users_tb u
		where
		q.user_number =u.user_number and
		q.productQna_number =
		#{productQna_number}
	</select>

	<select id="qnaReplyProduct" resultType="com.parker.admin.vo.ProductQnaReplyVO">
		select * from
		productqnareply_tb
		where
		productqna_number=#{productQna_number}
	</select>

	<insert id="qnaReplyInsertProduct">
		insert into
		productqnareply_tb(
		productqnareply_number,
		productQnaReply_content,
		admin_number,
		productqna_number)
		values(seq_productqnareply_tb.nextval,#{productQnaReply_content},#{admin_number},#{productQna_number}
		)

	</insert>

	<update id="productQnaStatusUpdate">
		update productqna_tb
		set productqna_status = '답변완료'
		where productqna_number = #{productQna_number}
	</update>

</mapper>